{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marko\\\\Programiranje\\\\Projects\\\\AppointmentPlanner\\\\appointment-planner-starting-v18\\\\appointment-planner-starting-v18\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n  const [contact, setContact] = useState([]);\n  const [appointment, setAppointment] = useState([]);\n\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n  const contactAddingFunction = (name, phone, email) => {\n    const contactObject = {\n      name: name,\n      phone: phone,\n      email: email\n    };\n    setContact(prev => [contactObject, ...prev]);\n  };\n  const appointmentAddingFunction = (title, contact, date, time) => {\n    const appointmentObject = {\n      title: title,\n      contact: contact,\n      date: date,\n      time: time\n    };\n    setAppointment(prev => [appointmentObject, ...prev]);\n  };\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 31\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: ROUTES.CONTACTS,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.CONTACTS,\n      element: /*#__PURE__*/_jsxDEV(ContactsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 47\n      }, this) /* Add props to ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.APPOINTMENTS,\n      element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 51\n      }, this) /* Add props to AppointmentsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"et2POrSSXedaVeEtSV1Xy1JtHkE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","jsxDEV","_jsxDEV","App","_s","contact","setContact","appointment","setAppointment","contactAddingFunction","name","phone","email","contactObject","prev","appointmentAddingFunction","title","date","time","appointmentObject","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","to","CONTACTS","replace","APPOINTMENTS","_c","$RefreshReg$"],"sources":["C:/Users/Marko/Programiranje/Projects/AppointmentPlanner/appointment-planner-starting-v18/appointment-planner-starting-v18/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n  const [contact, setContact] = useState([]);\r\n  const [appointment, setAppointment] = useState([]);\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n  const contactAddingFunction = (name, phone, email) => {\r\n    const contactObject = {\r\n      name: name,\r\n      phone: phone,\r\n      email: email\r\n    };\r\n    setContact(prev => [contactObject, ...prev]);\r\n  };\r\n\r\n  const appointmentAddingFunction = (title, contact, date, time) => {\r\n    const appointmentObject = {\r\n      title: title,\r\n      contact: contact,\r\n      date: date,\r\n      time: time\r\n    }\r\n    setAppointment(prev => [appointmentObject, ...prev]);\r\n  }\r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    <Route path=\"/\" element={ <Root/> }>\r\n      <Route index element={ <Navigate to={ROUTES.CONTACTS} replace/> }/>\r\n      <Route path={ROUTES.CONTACTS} element={ <ContactsPage /> /* Add props to ContactsPage */ }/>\r\n      <Route path={ROUTES.APPOINTMENTS} element={ <AppointmentsPage /> /* Add props to AppointmentsPage */ }/>\r\n    </Route>\r\n  ));\r\n  \r\n  return (\r\n    <RouterProvider router={router}/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,EAAEC,mBAAmB,EAAEC,wBAAwB,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACjH,OAAOC,IAAI,IAAIC,MAAM,QAAQ,wBAAwB;AACrD,SAASC,gBAAgB,QAAQ,gDAAgD;AACjF,SAASC,YAAY,QAAQ,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;AACF;AACA;AACA;EACE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;;EAElD;AACF;AACA;AACA;EACE,MAAMkB,qBAAqB,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEC,KAAK,KAAK;IACpD,MAAMC,aAAa,GAAG;MACpBH,IAAI,EAAEA,IAAI;MACVC,KAAK,EAAEA,KAAK;MACZC,KAAK,EAAEA;IACT,CAAC;IACDN,UAAU,CAACQ,IAAI,IAAI,CAACD,aAAa,EAAE,GAAGC,IAAI,CAAC,CAAC;EAC9C,CAAC;EAED,MAAMC,yBAAyB,GAAGA,CAACC,KAAK,EAAEX,OAAO,EAAEY,IAAI,EAAEC,IAAI,KAAK;IAChE,MAAMC,iBAAiB,GAAG;MACxBH,KAAK,EAAEA,KAAK;MACZX,OAAO,EAAEA,OAAO;MAChBY,IAAI,EAAEA,IAAI;MACVC,IAAI,EAAEA;IACR,CAAC;IACDV,cAAc,CAACM,IAAI,IAAI,CAACK,iBAAiB,EAAE,GAAGL,IAAI,CAAC,CAAC;EACtD,CAAC;EAED,MAAMM,MAAM,GAAG3B,mBAAmB,CAACC,wBAAwB,eACzDQ,OAAA,CAACP,KAAK;IAAC0B,IAAI,EAAC,GAAG;IAACC,OAAO,eAAGpB,OAAA,CAACL,IAAI;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;IAAAC,QAAA,gBACjCzB,OAAA,CAACP,KAAK;MAACiC,KAAK;MAACN,OAAO,eAAGpB,OAAA,CAACN,QAAQ;QAACiC,EAAE,EAAE/B,MAAM,CAACgC,QAAS;QAACC,OAAO;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACnExB,OAAA,CAACP,KAAK;MAAC0B,IAAI,EAAEvB,MAAM,CAACgC,QAAS;MAACR,OAAO,eAAGpB,OAAA,CAACF,YAAY;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,CAAC;IAAiC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC5FxB,OAAA,CAACP,KAAK;MAAC0B,IAAI,EAAEvB,MAAM,CAACkC,YAAa;MAACV,OAAO,eAAGpB,OAAA,CAACH,gBAAgB;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,CAAC;IAAqC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClG,CACT,CAAC;EAEF,oBACExB,OAAA,CAACV,cAAc;IAAC4B,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;AAErC;AAACtB,EAAA,CA1CQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}